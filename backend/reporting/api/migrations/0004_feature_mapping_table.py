# Generated by Django 3.0.4 on 2020-08-05 13:51

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('api', '0003_add_gta_field_parser'),
    ]

    operations = [
        migrations.CreateModel(
            name='Feature',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='FeatureMapping',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('public', models.BooleanField(default=False)),
                ('official', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='FeatureMappingRule',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Milestone',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='TestScenario',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
            ],
        ),
        migrations.AlterModelOptions(
            name='resultgroupnew',
            options={'verbose_name': 'Result Group', 'verbose_name_plural': 'Result Groups'},
        ),
        migrations.AddConstraint(
            model_name='item',
            constraint=models.UniqueConstraint(fields=('name', 'args'), name='unique_item_composite_constraint'),
        ),
        migrations.AddField(
            model_name='featuremappingrule',
            name='feature',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Feature'),
        ),
        migrations.AddField(
            model_name='featuremappingrule',
            name='mapping',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.FeatureMapping'),
        ),
        migrations.AddField(
            model_name='featuremappingrule',
            name='milestone',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Milestone'),
        ),
        migrations.AddField(
            model_name='featuremappingrule',
            name='scenario',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.TestScenario'),
        ),
        migrations.AddField(
            model_name='featuremapping',
            name='component',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Component'),
        ),
        migrations.AddField(
            model_name='featuremapping',
            name='os',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Os'),
        ),
        migrations.AddField(
            model_name='featuremapping',
            name='owner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='featuremapping',
            name='platform',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Platform'),
        ),
        migrations.AddConstraint(
            model_name='featuremappingrule',
            constraint=models.UniqueConstraint(fields=('milestone', 'feature', 'scenario', 'mapping'), name='unique_featuremappingrule_composite_constraint'),
        ),
        migrations.AddConstraint(
            model_name='featuremapping',
            constraint=models.UniqueConstraint(fields=('name', 'owner'), name='unique_featuremapping_composite_constraint'),
        ),
    ]
