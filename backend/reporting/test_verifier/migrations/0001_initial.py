# Generated by Django 3.0.4 on 2020-07-23 14:57

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('api', '0001_squashed_0019_auto_20200630_1100'),
    ]

    operations = [
        migrations.CreateModel(
            name='Codec',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Feature',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='FeatureCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='SubFeature',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('notes', models.CharField(blank=True, max_length=255, null=True)),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='test_verifier.FeatureCategory')),
                ('codec', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='test_verifier.Codec')),
                ('feature', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='test_verifier.Feature')),
                ('lin_platforms', models.ManyToManyField(related_name='lin_subfeatures', to='api.Platform')),
                ('win_platforms', models.ManyToManyField(related_name='win_subfeatures', to='api.Platform')),
            ],
        ),
        migrations.AddConstraint(
            model_name='subfeature',
            constraint=models.UniqueConstraint(fields=('name', 'category', 'feature', 'codec'), name='unique_subfeature'),
        ),
    ]
